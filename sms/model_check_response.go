/*
 * Nexmo Verify API
 *
 * The Verify API helps you to implement 2FA (two-factor authentication) in your applications. This is useful for:  * Protecting against spam, by preventing spammers from creating multiple accounts * Monitoring suspicious activity, by forcing an account user to verify ownership of a number * Ensuring that you can reach your users at any time because you have their correct phone number More information is available at <https://developer.nexmo.com/verify>
 *
 * API version: 1.0.9
 * Contact: devrel@nexmo.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package sms

import (
	"bytes"
	"encoding/json"
)

// CheckResponse Success
type CheckResponse struct {
	// The `request_id` that you received in the response to the Verify request and used in the Verify check request.
	RequestId *string `json:"request_id,omitempty"`
	// The ID of the verification event, such as an SMS or TTS call.
	EventId *string `json:"event_id,omitempty"`
	// A value of `0` indicates that your user entered the correct code. If it is non-zero, check the `error_text`.
	Status *string `json:"status,omitempty"`
	// The cost incurred for this request.
	Price *string `json:"price,omitempty"`
	// The currency code.
	Currency *string `json:"currency,omitempty"`
	// This field may not be present, depending on your pricing model. The value indicates the cost (in EUR) of the calls made and messages sent for the verification process. This value may be updated during and shortly after the request completes because user input events can overlap with message/call events. When this field is present, the total cost of the verification is the sum of this field and the `price` field. 
	EstimatedPriceMessagesSent *string `json:"estimated_price_messages_sent,omitempty"`
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *CheckResponse) GetRequestId() string {
	if o == nil || o.RequestId == nil {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CheckResponse) GetRequestIdOk() (string, bool) {
	if o == nil || o.RequestId == nil {
		var ret string
		return ret, false
	}
	return *o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *CheckResponse) HasRequestId() bool {
	if o != nil && o.RequestId != nil {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *CheckResponse) SetRequestId(v string) {
	o.RequestId = &v
}

// GetEventId returns the EventId field value if set, zero value otherwise.
func (o *CheckResponse) GetEventId() string {
	if o == nil || o.EventId == nil {
		var ret string
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CheckResponse) GetEventIdOk() (string, bool) {
	if o == nil || o.EventId == nil {
		var ret string
		return ret, false
	}
	return *o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *CheckResponse) HasEventId() bool {
	if o != nil && o.EventId != nil {
		return true
	}

	return false
}

// SetEventId gets a reference to the given string and assigns it to the EventId field.
func (o *CheckResponse) SetEventId(v string) {
	o.EventId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CheckResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CheckResponse) GetStatusOk() (string, bool) {
	if o == nil || o.Status == nil {
		var ret string
		return ret, false
	}
	return *o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CheckResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CheckResponse) SetStatus(v string) {
	o.Status = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *CheckResponse) GetPrice() string {
	if o == nil || o.Price == nil {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CheckResponse) GetPriceOk() (string, bool) {
	if o == nil || o.Price == nil {
		var ret string
		return ret, false
	}
	return *o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *CheckResponse) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *CheckResponse) SetPrice(v string) {
	o.Price = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CheckResponse) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CheckResponse) GetCurrencyOk() (string, bool) {
	if o == nil || o.Currency == nil {
		var ret string
		return ret, false
	}
	return *o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CheckResponse) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *CheckResponse) SetCurrency(v string) {
	o.Currency = &v
}

// GetEstimatedPriceMessagesSent returns the EstimatedPriceMessagesSent field value if set, zero value otherwise.
func (o *CheckResponse) GetEstimatedPriceMessagesSent() string {
	if o == nil || o.EstimatedPriceMessagesSent == nil {
		var ret string
		return ret
	}
	return *o.EstimatedPriceMessagesSent
}

// GetEstimatedPriceMessagesSentOk returns a tuple with the EstimatedPriceMessagesSent field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CheckResponse) GetEstimatedPriceMessagesSentOk() (string, bool) {
	if o == nil || o.EstimatedPriceMessagesSent == nil {
		var ret string
		return ret, false
	}
	return *o.EstimatedPriceMessagesSent, true
}

// HasEstimatedPriceMessagesSent returns a boolean if a field has been set.
func (o *CheckResponse) HasEstimatedPriceMessagesSent() bool {
	if o != nil && o.EstimatedPriceMessagesSent != nil {
		return true
	}

	return false
}

// SetEstimatedPriceMessagesSent gets a reference to the given string and assigns it to the EstimatedPriceMessagesSent field.
func (o *CheckResponse) SetEstimatedPriceMessagesSent(v string) {
	o.EstimatedPriceMessagesSent = &v
}

type NullableCheckResponse struct {
	Value CheckResponse
	ExplicitNull bool
}

func (v NullableCheckResponse) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}	
}

func (v *NullableCheckResponse) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}

